#!/usr/bin/env python
# Copyright (c) 2015 Sine Nomine Associates
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THE SOFTWARE IS PROVIDED 'AS IS' AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

import sys
import os
import re
import shlex
import subprocess

ALLOW = """
chmod 755 /etc/openafs/server
chmod 755 /usr/afs/etc
chmod 755 /usr/afs/local
chmod 755 /var/lib/openafs
chmod 755 /etc/init.d/afs
cp -r -p \S+ /usr/afs
cp -r -p \S+ /usr/afsws
cp -r -p \S+ /usr/vice
cp \S+ /etc/init.d/afs
cp \S+ /etc/openafs/\S+
cp \S+ /etc/sysconfig
cp \S+ /usr/afs/\S+
cp \S+ /usr/vice/etc/\S+
cp \S+ /var/lib/openafs/\S+
/etc/init.d/afs .*
insmod \S*(lib|open)afs\S*\.ko
mkdir -p /afs
mkdir -p /etc/openafs
mkdir -p /etc/openafs/server
mkdir -p /etc/sysconfig
mkdir -p /usr/afs
mkdir -p /usr/afs/etc
mkdir -p /usr/afs/lib
mkdir -p /usr/afs/local
mkdir -p /usr/afsws
mkdir -p /usr/vice/etc
mkdir -p /usr/vice/etc/config
mkdir -p /var/lib/openafs
pkill bosserver
rm -f /etc/openafs/CellServDB
rm -f /etc/openafs/ThisCell
rm -f /usr/vice/etc/CellServDB
rm -f /usr/vice/etc/ThisCell
rm -f /vicep[a-z][a-z]?/V\d+\.vol
rmmod (lib|open)afs
rm -rf /afs
rm -rf /etc/openafs
rm -rf /etc/openafs/server
rm -rf /usr/afs/bin
rm -rf /usr/afs/db
rm -rf /usr/afs/etc
rm -rf /usr/afs/lib
rm -rf /usr/afs/local
rm -rf /usr/afs/logs
rm -rf /usr/afsws
rm -rf /usr/vice/etc
rm -rf /var/lib/openafs
rm -rf /var/lib/openafs/db
rm -rf /var/log/openafs
rm -rf /vicep\w+/AFSIDat
rm -rf /vicep\w+/Lock
rm /usr/vice/etc/CellServDB
rm /usr/vice/etc/ThisCell
rpm .*
\S+/afsd ?.*
\S+/asetkey .*
/sbin/ldconfig ?.*
/sbin/service openafs-(client|server) .*
\S+/bos .*
\S+/bosserver ?.*
\S+/pts .*
\S+/vos .*
umount /afs
uname
"""

def is_allowed(cmd_line):
    """Return true if this command is permitted."""
    for pattern in ALLOW.splitlines():
        pattern = pattern.strip()
        if pattern == "" or pattern.startswith("#"):
            continue
        if re.match(pattern + "$", cmd_line):
            return True
    return False

def main(args):
    """Run permitted commands as root."""
    if os.getuid() != 0:
        sys.stderr.write("afs-robotest-sudo: Must run as root.\n");
        sys.exit(os.EX_USAGE)
    if len(args) == 0:
        sys.stderr.write("usage: afs-robotest-sudo <command-line>\n")
        sys.exit(os.EX_USAGE)
    cmd_line = " ".join(args)
    if not is_allowed(cmd_line):
        sys.stderr.write("afs-robotest-sudo: Command not permitted: %s\n" % (cmd_line));
        sys.exit(os.EX_NOPERM)
    args = shlex.split(cmd_line)
    rc = subprocess.call(args)
    if rc:
        sys.exit(os.EX_SOFTWARE)
    sys.exit(os.EX_OK)

main(sys.argv[1:])
